{"version":3,"sources":["components/DataForm.js","components/DataItem.js","components/DataResult.js","App.js","reportWebVitals.js","index.js"],"names":["DataForm","props","className","onSubmit","evt","preventDefault","addRowToList","value","dateValue","onChange","target","onDateChange","passedValue","onPassedChange","DataItem","item","date","passed","id","onClick","removeItem","handleRemoveItem","DataResult","listing","map","sortByDate","a","b","Date","split","reverse","App","useState","setDateValue","setPassedValue","setListing","ids","setId","newItem","prevId","listingIndex","findIndex","prevListing","o","sort","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22050f4c.chunk.js","sourcesContent":["const DataForm = props => {\r\n\r\n  const handleDateChange = evt => {\r\n    const {value} = evt.target;\r\n    props.onDateChange(value);\r\n  }\r\n\r\n  const handlePassedChange = evt => {\r\n    const {value} = evt.target;\r\n    props.onPassedChange(value);\r\n  }\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    props.addRowToList();\r\n  }\r\n\r\n  return (\r\n    <form className=\"DataForm\" onSubmit={handleSubmit}>\r\n      <div className=\"block\">\r\n        <div className=\"title\">\r\n          Дата (ДД.ММ.ГГ)\r\n        </div>\r\n        <div className=\"input\">\r\n          <input value={props.dateValue} onChange={handleDateChange} />\r\n        </div>\r\n      </div>\r\n      <div className=\"block\">\r\n        <div className=\"title\">\r\n          Пройдено км\r\n        </div>\r\n        <div className=\"input\">\r\n          <input value={props.passedValue} onChange={handlePassedChange} />\r\n        </div>\r\n      </div>\r\n      <div className=\"block\">\r\n        <div className=\"submit\">\r\n          <button>\r\n            ОК\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default DataForm;","const DataItem = props => {\r\n\r\n  const {date, passed, id} = props.item;\r\n\r\n  const handleRemoveItem = id => {\r\n    props.removeItem(id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"result-body-row\">\r\n      <div className=\"result-body-item\">\r\n        {date}\r\n      </div>\r\n      <div className=\"result-body-item\">\r\n        {passed}\r\n      </div>\r\n      <div className=\"result-body-item\">\r\n        <button onClick={() => handleRemoveItem(id)}>x</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DataItem;","import DataItem from \"./DataItem\";\r\n\r\nconst DataResult = ({listing, removeItem}) => {\r\n  const handleRemoveItem = (id) => {\r\n    removeItem(id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      <div className=\"result-header\">\r\n        <div className=\"result-header-item\">\r\n          Дата (ДД.ММ.ГГ)\r\n        </div>\r\n        <div className=\"result-header-item\">\r\n          Пройдено км\r\n        </div>\r\n        <div className=\"result-header-item\">\r\n          Действия\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"result-body\">\r\n        {listing.map(item => <DataItem key={item.id} item={item} removeItem={() => handleRemoveItem(item.id)} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DataResult;","import React, { useState } from 'react';\nimport './App.css';\nimport DataForm from './components/DataForm';\nimport DataResult from './components/DataResult';\n\nconst sortByDate = (a, b) => \n  new Date(...a.date.split('.').reverse()) - new Date(...b.date.split('.').reverse());\n\nfunction App() {\n  const [dateValue, setDateValue] = useState('');\n  const [passedValue, setPassedValue] = useState('');\n  const [listing, setListing] = useState([]);\n  const [ids, setId] = useState(1);\n\n  const handleDateChange = value => {\n    setDateValue(value);\n  }\n\n  const handlePassedChange = value => {\n    setPassedValue(value);\n  }\n\n  const handleAddRow = () => {\n    const newItem = {\n      'id' : ids,\n      'date' : dateValue,\n      'passed' : passedValue\n    };\n    setId(prevId => prevId + 1);\n    const listingIndex = listing.findIndex((item) => item.date === dateValue);\n\n    if (listingIndex !== -1) {\n      setListing(prevListing => prevListing.map(\n        o => \n          (o.date === newItem.date) ?\n          {'id':ids,'passed':(+o.passed + +newItem.passed),'date':dateValue} :\n          o\n      ));\n    } else {\n      setListing(prevListing => [...prevListing, newItem]);\n    }\n\n    setListing(prevListing => prevListing.sort(sortByDate));\n    setDateValue('');\n    setPassedValue('');\n  }\n\n  const removeItem = id => {\n    setListing(prevListing => prevListing.filter(o => o.id !== id));\n  }\n  \n  return (\n    <div className=\"main\">\n      <div className=\"wrapper\">\n        <DataForm\n          dateValue={dateValue}\n          passedValue={passedValue}\n          onDateChange={handleDateChange}\n          onPassedChange={handlePassedChange}\n          addRowToList={handleAddRow}\n        />\n        <DataResult listing={listing} removeItem={removeItem} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}